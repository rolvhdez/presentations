% ---
% Custom code styles (listings package)
% ---
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{mycodestyle}[2024/02/18 Custom listings styles for Beamer presentation.]

\RequirePackage{xcolor} % code and algorithms
\RequirePackage{listings} % code and algorithms
\RequirePackage{kvoptions} % code and algorithms
\RequirePackage{parskip} % code and algorithms

% Define package options
\SetupKeyvalOptions{
    family=mycodestyle,
    prefix=mycodestyle@
}

% Define options for light/dark mode
\DeclareBoolOption{light} % Light mode (Catppuccin Latte)
\DeclareBoolOption{dark}  % Dark mode (Catppuccin Mocha)

% Process the options
\ProcessKeyvalOptions*

% Default to light mode if no mode is specified
\ifdefined\mycodestyle@light\else
    \ifdefined\mycodestyle@dark\else
        \PackageWarning{mycodestyle}{No mode specified. Defaulting to light mode.}
        \mycodestyle@lighttrue
    \fi
\fi

% Custom colors (xcolor package)
% Palette comes from Catpuccin Latte (https://catppuccin.com/palette/)
% Light mode colors (Catppuccin Latte)
\ifmycodestyle@light
    \definecolor{code}{HTML}{4c4f69}        % #4c4f69
    \definecolor{comment}{HTML}{acb0be}     % #acb0be
    \definecolor{blue}{HTML}{1e66f5}        % #1e66f5
    \definecolor{azure}{HTML}{04a5e5}       % #04a5e5
    \definecolor{cyan}{HTML}{209fb5}        % #209fb5
    \definecolor{green}{HTML}{40a02b}       % #40a02b
    \definecolor{lime}{HTML}{179299}        % #179299
    \definecolor{yellow}{HTML}{df8e1d}      % #df8e1d
    \definecolor{orange}{HTML}{fe640b}      % #fe640b
    \definecolor{red}{HTML}{d20f39}         % #d20f39
    \definecolor{magenta}{HTML}{ea76cb}     % #ea76cb
    \definecolor{purple}{HTML}{8839ef}      % #8839ef
    \definecolor{background}{HTML}{ffffff}  % #ffffff
\fi

% Dark mode colors (Catppuccin Mocha)
\ifmycodestyle@dark
    \definecolor{code}{HTML}{cdd6f4}        % #cdd6f4
    \definecolor{comment}{HTML}{585b70}     % #585b70
    \definecolor{blue}{HTML}{89b4fa}        % #89b4fa
    \definecolor{azure}{HTML}{74c7ec}       % #74c7ec
    \definecolor{cyan}{HTML}{89dceb}        % #89dceb
    \definecolor{green}{HTML}{a6e3a1}       % #a6e3a1
    \definecolor{lime}{HTML}{94e2d5}        % #94e2d5
    \definecolor{yellow}{HTML}{f9e2af}      % #f9e2af
    \definecolor{orange}{HTML}{fab387}      % #fab387
    \definecolor{red}{HTML}{f38ba8}         % #f38ba8
    \definecolor{magenta}{HTML}{f5c2e7}     % #f5c2e7
    \definecolor{purple}{HTML}{cba6f7}      % #cba6f7
    \definecolor{background}{HTML}{1e1e2e}  % #1e1e2e
\fi

\definecolor{colorA}{RGB}{0,38,76}
\definecolor{colorB}{RGB}{4,47,89}
\definecolor{colorC}{RGB}{10,56,102}
\definecolor{colorD}{RGB}{17,66,115}
\definecolor{colorE}{RGB}{25,76,127}
\definecolor{colorH}{RGB}{58,112,166}

% General code ----
\lstdefinestyle{codeonwhite}{
    xleftmargin=40pt,
    xrightmargin=0pt,
    frame=leftline,
    framesep=0pt,
    framerule=5pt,
    rulecolor=\color{background},
    backgroundcolor=\color{background},
    basicstyle=\setlength{\lineskip}{0pt}\ttfamily\footnotesize\color{code},
    numbers=left,
    numberstyle=\scriptsize\ttfamily\color{gray},
    numbersep=10pt,
    upquote=true,
    showstringspaces=false,
    tabsize=4,
    breaklines=false,
    breakindent=20pt,
    breakatwhitespace=true,
    breakautoindent=true,
    aboveskip=1em,
    belowskip=0.2em
}

% Pseudocode ----
\lstdefinelanguage{pseudocode}{
    style=codeonwhite,
    %basicstyle=\rmfamily\small,
    commentstyle=\color{gray}\itshape,
    stringstyle=\color{orange}\ttfamily,
    keywords={function, for, while, do, break, continue,
        if, then, else, end, in, to, until, return},
    keywordstyle=\color{black}\bfseries,
    morecomment=[l]{\%\ },
    morestring=[b]",
    morestring=[b]',
    columns=flexible,
    prebreak={ \dots},
    mathescape=true,
    escapechar=`}
\lstnewenvironment{pseudocode}[1][1]{%
    \lstset{language=pseudocode, firstnumber=#1}}{}
\lstnewenvironment{pseudocodetight}[1][1]{%
    \renewcommand{\HL}{\tikz[overlay]{\draw[ruleColor, line width=2pt]
        (-5pt,-4pt) -- (-5pt,10pt);}}
    \lstset{language=pseudocode, firstnumber=#1,
        xleftmargin=15pt, numbersep=10pt, rulecolor=\color{white}}%
    \colorlet{ruleColor}{gray}}%
    {\renewcommand{\HL}{\tikz[overlay]{\draw[ruleColor, line width=2pt]
        (-10pt,-4pt) -- (-10pt,10pt);}}}

% Python code ----
\lstdefinelanguage{python}{
    style=codeonwhite,
    %basicstyle=\ttfamily\footnotesize,
    rulecolor=\color{yellow!20},
    commentstyle=\color{comment},
    stringstyle=\color{green},
    keywordstyle=[1]\color{blue},   % keywords
    keywordstyle=[2]\color{orange},   % builtin functions
    keywordstyle=[3]\color{purple},  % NumPy
    keywordstyle=[4]\color{magenta}, % MatplotLib
    keywords={and, as, assert, break, class, continue, def, del, elif, else,
        except, False, finally, for, from, global, if, import, in, is, lambda,
        None, nonlocal, not, or, pass, raise, return, True, try, while, with,
        yield},
    morekeywords=[2]{abs, aiter, all, any, anext, ascii, bin, bool, breakpoint,
        bytearray, bytes, callable, chr, classmethod, compile, complex, delattr,
        dict, dir, divmod, enumerate, eval, exec, exit, filter, float, format,
        frozenset, getattr, globals, hasattr, hash, help, hex, id, input, int,
        isinstance, issubclass, iter, len, list, locals, map, max, memoryview,
        min, next, object, oct, open, ord, quit, pow, print, property, range,
        repr, reversed, round, set, setattr, slice, sorted, staticmethod, str,
        sum, super, tuple, type, vars, zip},
    morekeywords=[3]{DataSource, LinAlgError, MachAr, NDArrayOperatorsMixin,
        NumpyVersion, abs, absolute, add, all, allclose, amax, amin, angle,
        any, append, apply_along_axis, apply_over_axis, arange, arccos, arccosh,
        arcsin, arcsinh, arctan, arctan2, arctanh, argmax, argmin, argpartition,
        argsort, argwhere, around, array, array2string, array_equal,
        array_equiv, array_repr, array_split, array_str, arraysetops,
        asanyarray, asarray, asarray_chkfinite, ascontiguousarray, asfarray,
        asfortranarray, asmatrix, asscalar, atleast_1d, atleast_2d, atleast_3d,
        average, bartlett, base_repr, binary_repr, bincount, bitwise_and,
        bitwise_or, bitwise_xor, blackman, block, bmat, broadcast,
        broadcast_arrays, broadcast_shapes, broadcast_to, busday_count,
        busday_offset, busdaycalendar, byte_bounds, c_, can_cast, capitalize,
        cbrt, ceil, center, chararray, chebyshev, cholesky, choose, cla, clip,
        column_stack, common_type, compare_chararrays, compress, concatenate,
        cond, conj, conjugate, convolve, copy, copysign, copyto, corrcoef,
        correlate, cos, cosh, count, count_nonzero, cov, cross, cumprod, cumsum,
        datetime_as_string, datetime_data, decode, deg2rad, degrees, delete,
        deprecate, deprecate_with_doc, det, diag, diag_indices,
        diag_indices_from, diagflat, diagonal, diff, digitize, disp, divide,
        divmod, dot, dsplit, dstack, dtype, ediff1d, eig, eigh, eigs, eigvals,
        eigvalsh, einsum, einsum_path, empty, empty_like, encode, endswith,
        equal, errstate, exp, exp2, expand_dims, expandtabs, expm1, extract,
        eye, fabs, fft, fft2, fftfreq, fftn, fftshift, hfft, ifft, ifft2, ifftn,
        ifftshift, ihfft, irfft, irfft2, irfftn, rfft, rfft2, rfftfreq, rfftn,
        fill_diagonal, find, find_common_type, finfo, fix, flat, flatiter,
        flatnonzero, flatten, flip, fliplr, flipud, float_power, floor,
        floor_divide, fmax, fmin, fmod, format_float_positional,
        format_float_scientific, format_parser, frexp, frombuffer, fromfile,
        fromfunction, fromiter, frompyfunc, fromregex, fromstring, fsolve, full,
        full_like, gcd, genfromtxt, geomspace, get_include, get_printoptions,
        getbufsize, geterr, geterrcall, geterrobj, gradient, greater,
        greater_equal, hamming, hanning, heaviside, hermite, hermite_e,
        histogram, histogram2d, histogram_bin_edges, histogramdd, hsplit,
        hstack, hypot, i0, identity, identiy, iinfo, imag, in1d, index, indices,
        inner, insert, interp, intersect1d, inv, invert, is_busday, isalnum,
        isalpha, isclose, iscomplex, iscomplexobj, isdecimal, isdigit, isfinite,
        isfortran, isin, isinf, islower, isnan, isnat, isneginf, isnumeric,
        isposinf, isreal, isrealobj, isscalar, issctype, isspace, issubclass_,
        issubdtype, issubsctype, istitle, isupper, ix_, join, kaiser, kron,
        laguerre, lcm, ldexp, left_shift, legendre, less, less_equal, lexsort,
        linspace, ljust, load, loadtxt, log, log10, log1p, log2, logaddexp,
        logaddexp2, logical_and, logical_not, logical_or, logical_xor, logspace,
        lower, lstrip, lstsq, mask_indices, mat, matmul, matrix_power,
        matrix_rank, max, maximum, maximum_sctype, may_share_memory, mean,
        median, memmap, meshgrid, mgrid, min, min_scalar_type, minimum,
        mintypecode, mod, modf, moveaxis, msort, multi_dot, multiply,
        nan_to_num, nanargmax, nanargmin, nancumprod, nancumsum, nanmax,
        nanmean, nanmedian, nanmin, nanpercentile, nanprod, nanquantile, nanstd,
        nansum, nanvar, ndenumerate, ndindex, nditer, negative, nested_iters,
        nextafter, nonzero, norm, not_equal, obj2sctype, ode, ogrid, ones,
        ones_like, outer, packbits, pad, partition, pcolor, percentile, pi,
        piecewise, pinv, place, polyfit, polynomial, polyval, positive, power,
        printoptions, prod, promote_types, ptp, put, put_along_axis, putmask,
        qr, quad, quantile, r_, rad2deg, radians, rand, randn, ravel,
        ravel_multi_index, real, real_if_close, reciprocal, remainder, repeat,
        replace, repmat, require, reshape, resize, result_type, rfind,
        right_shift, rindex, rint, rjust, roll, rollaxis, rot90, round_, round,
        row_stack, rpartition, rsplit, rstrip, s_, save, savetxt, savez,
        savez_compressed, sctype2char, searchsorted, select, set_printoptions,
        set_string_function, setbufsize, setdiff1d, seterr, seterrcall,
        seterrobj, setxor1d, shape, shares_memory, show_config, sign, signbit,
        sin, sinc, sinh, slogdet, solve, sort, sort_complex, spacing, split,
        splitlines, sqrt, square, squeeze squeeze, stack, startswith, std,
        str_len, strip, subtract, sum, svd, swapaxes, swapcase, take,
        take_along_axis, tan, tanh, tensordot, tensorinv, tensorsolve, tile,
        title, tofile, tolist, trace, translate, transpose, trapz, tri, tril,
        tril_indices, tril_indices_from, trim_zeros, triu, triu_indices,
        triu_indices_from, true_divide, trunc, typename, union1d, unique,
        unpackbits, unravel_index, unwrap, upper, vander, var, vdot, vectorize,
        vsplit, vstack, where, who, xlabel, ylabel, zeros, zeros_like, zfill},
    morekeywords=[4]{acorr, angle_spectrum, annotate, arrow, autoscale, autumn,
        axes, axhline, axhspan, axis, axline, axvline, axvspan, bar, bar_label,
        barbs, barh, bone, box, boxplot, broken_barh, cla, clabel, clf, clim,
        close, cohere, colorbar, connect, contour, contourf, cool, copper, csd,
        delaxes, disconnect, draw, draw_if_interactive, errorbar, eventplot,
        figimage, figlegend, fignum_exists, figtext, figure, fill, fill_between,
        fill_betweenx, findobj, flag, gca, gcf, gci, get,
        get_current_fig_manager, get_figlabels, get_fignums, get_plot_commands,
        getp, ginput, gray, grid, hexbin, hist, hist2d, hlines, hot, hsv,
        imread, imsave, imshow, inferno, install_repl_displayhook, ioff, ion,
        isinteractive, get, legend, locator_params, loglog, magma,
        magnitude_spectrum, margins, matshow, minorticks_off, minorticks_on,
        new_figure_manager, nipy_spectral, pause, pcolor, pcolormesh,
        phase_spectrum, pie, pink, plasma, plot, plot_date, polar, prism, psd,
        quiver, quiverkey, rc, rc_context, rcdefaults, rgrids, savefig, sca,
        scatter, sci, semilogx, semilogy, set_cmap, setp, show, specgram,
        spring, spy, stackplot, stairs, stem, step, streamplot, subplot,
        subplot2grid, subplot_mosaic, subplot_tool, subplots, subplots_adjust,
        summer, suptitle, switch_backend, table, text, thetagrids, tick_params,
        ticklabel_format, tight_layout, title, tricontour, trcontourf,
        tripcolor, triplot, twinx, twiny, uninstall_repl_displayhook,
        violinplot, viridis, vlines, waitforbuttonpress, winter, xcorr, xkcd,
        xlabel, xlim, xscale, xticks, ylabel, ylim, yscale, yticks},
    morecomment=[l]{\#\ },
    morecomment=[s]{"""}{"""},
    morestring=[b]",
    morestring=[b]',
    prebreak={ \char92},
    escapechar=`}
\lstnewenvironment{python}[1][1]{%
    \lstset{language=python, firstnumber=#1}}{}
\newcommand*{\inputpython}[3]{\lstinputlisting[linerange={{#2}-{#3}},
    firstnumber=#2, language=python]{#1}}
\newcommand*{\py}{\lstinline[language=python, basicstyle=\ttfamily]}

% R code ----
\lstdefinelanguage{rlang}{
    style=codeonwhite,
    language=R,
    %basicstyle=\linespread{1.2}\ttfamily\footnotesize,
    commentstyle=\color{comment},
    stringstyle=\color{green},
    keywordstyle=\color{azure},
    morekeywords={TRUE, FALSE},
    deletekeywords={data, frame, length, as, character, gamma, beta},
    prebreak={},
    rulecolor=\color{blue!20},
    escapechar=`}
\lstnewenvironment{rlang}[1][1]{%
    \lstset{language=rlang, firstnumber=#1}%
    \colorlet{ruleColor}{purple}}{}
\newcommand*{\inputrlang}[3]{\lstinputlisting[linerange={{#2}-{#3}},
    firstnumber=#2, language=rlang]{#1}}
\newcommand*{\rlng}{\lstinline[language=rlang, basicstyle=\ttfamily]}

% Line highlighting
\colorlet{ruleColor}{black}
\newcommand{\HL}{\tikz[overlay]{\draw[ruleColor, line width=2pt]
    (-10pt,-4pt) -- (-10pt,10pt);}}